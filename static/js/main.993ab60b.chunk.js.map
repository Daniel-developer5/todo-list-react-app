{"version":3,"sources":["components/item/item.js","components/item/index.js","components/list/index.js","components/list/list.js","components/add-item-panel/index.js","components/add-item-panel/add-item-panel.js","components/layout/index.js","components/layout/layout.js","components/app/index.js","components/app/app.js","index.js"],"names":["Item","state","edit","newLabel","props","label","onStartEdit","setState","onEdit","e","target","value","saveChanging","className","preventDefault","match","forEdit","id","this","done","onMarkAsDone","onDeleteItem","classNames","Checkbox","color","onClick","checked","Component","Content","Task","title","EditTask","document","addEventListener","removeEventListener","onSubmit","TextField","autoFocus","onChange","defaultValue","List","todos","elems","map","other","key","AddItemPanel","onAddItem","variant","autoComplete","Button","type","Layout","list","emptyBlock","content","length","Container","maxWidth","Paper","elevation","App","maxId","localStorage","getItem","JSON","parse","text","getIndex","findIndex","elem","stateProcessing","prop","index","oldItem","newItem","slice","setItem","stringify","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.993ab60b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { Checkbox } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { TextField } from '@material-ui/core'\r\n\r\nimport './item.scss'\r\n\r\nexport default class Item extends Component {\r\n    state = {\r\n        edit: false,\r\n        newLabel: this.props.label\r\n    }\r\n\r\n    onStartEdit = () => {\r\n        this.setState({\r\n            edit: true\r\n        })\r\n    }\r\n\r\n    onEdit = e => {\r\n        this.setState({\r\n            newLabel: e.target.value\r\n        })\r\n    }\r\n\r\n    saveChanging = e => {\r\n        if (e.target.className === 'edit-form') {\r\n            e.preventDefault()\r\n        }\r\n\r\n        if (\r\n            e.target.className.match(/InputBase/i) &&\r\n            !e.target.className.match(/OutlinedInput/i)\r\n        ) {\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            edit: false\r\n        })\r\n\r\n        const { edit, id } = this.props.forEdit\r\n\r\n        edit(id, this.state.newLabel)\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            label, done, \r\n            onMarkAsDone, onDeleteItem,\r\n        } = this.props\r\n\r\n        const { edit } = this.state\r\n\r\n        let classNames = 'item'\r\n\r\n        if (done) classNames += ' done'\r\n\r\n        return (\r\n            <li className={ classNames }>\r\n                <div>\r\n                    <div>\r\n                        <Checkbox \r\n                            color=\"secondary\"\r\n                            onClick={ onMarkAsDone }\r\n                            checked={ done }\r\n                        />\r\n                    </div>\r\n                    <Content \r\n                        label={ label }\r\n                        edit={ edit }\r\n                        onStartEdit={ this.onStartEdit }\r\n                        onEdit={ this.onEdit }\r\n                        saveChanging={ this.saveChanging }\r\n                    />\r\n                </div>\r\n                <button onClick={ onDeleteItem }>\r\n                    <CloseIcon color=\"secondary\" />\r\n                </button>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nconst Content = props => {\r\n    if (props.edit) {\r\n        return (\r\n            <EditTask \r\n                label={ props.label }\r\n                onEdit={ props.onEdit }\r\n                saveChanging={ props.saveChanging }\r\n            />\r\n        )\r\n    } else {\r\n        return (\r\n            <Task\r\n                label={ props.label }\r\n                onStartEdit={ props.onStartEdit }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst Task = props => {\r\n    return (\r\n        <span \r\n            className=\"label\"\r\n            title=\"Click to edit\"\r\n            onClick={ props.onStartEdit }\r\n        >\r\n            { props.label }\r\n        </span> \r\n    )\r\n}\r\n\r\nclass EditTask extends Component {\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.props.saveChanging)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.props.saveChanging)\r\n    }\r\n\r\n    render() {\r\n        const { label, onEdit, saveChanging } = this.props\r\n\r\n        return (\r\n            <form \r\n                onSubmit={ saveChanging }\r\n                className=\"edit-form\"\r\n            >\r\n                <TextField \r\n                    autoFocus\r\n                    id=\"standard-basic\"\r\n                    onChange={ onEdit }\r\n                    defaultValue={ label }\r\n                />\r\n            </form>\r\n        )\r\n    }\r\n}","import Item from './item'\r\n\r\nexport default Item","import List from './list'\r\n\r\nexport default List","import React, { Component } from 'react'\r\n\r\nimport Item from '../item/'\r\n\r\nimport './list.scss'\r\n\r\nexport default class List extends Component {\r\n    render() {\r\n        const { \r\n            todos, onMarkAsDone,\r\n            onDeleteItem, onEdit\r\n        } = this.props\r\n\r\n        const elems = todos.map(({ id, ...other }) => {\r\n            return (\r\n                <Item \r\n                    { ...other }\r\n                    key={ id }\r\n                    onMarkAsDone={ () => { onMarkAsDone(id) } }\r\n                    onDeleteItem={ () => { onDeleteItem(id) } }\r\n                    forEdit={ {id, edit: onEdit } }\r\n                />\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"list\">\r\n                { elems }\r\n            </ul>\r\n        )\r\n    }\r\n}","import AddItemPanel from './add-item-panel'\r\n\r\nexport default AddItemPanel","import React, { Component } from 'react'\r\n\r\nimport { TextField, Button } from '@material-ui/core'\r\n\r\nimport './add-item-panel.scss'\r\n\r\nexport default class AddItemPanel extends Component {\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            value: e.target.value\r\n        })\r\n    }\r\n\r\n    onAddItem = e => {\r\n        e.preventDefault()\r\n\r\n        const { value } = this.state\r\n\r\n        if (value) {\r\n            this.props.onAddItem(value)\r\n            this.setState({\r\n                value: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                className=\"add-item-panel\"\r\n                onSubmit={ this.onAddItem }\r\n            >\r\n                <TextField \r\n                    id=\"outlined-basic\" \r\n                    label=\"Task\" \r\n                    variant=\"outlined\" \r\n                    onChange={ this.onChange }\r\n                    value = { this.state.value }\r\n                    autoComplete=\"off\"\r\n                />\r\n                <Button \r\n                    variant=\"outlined\"\r\n                    type=\"submit\"\r\n                >\r\n                    Add\r\n                </Button>\r\n            </form>\r\n        )\r\n    }\r\n}","import Layout from './layout'\r\n\r\nexport default Layout","import React, { Component } from 'react'\r\n\r\nimport { Paper, Container } from '@material-ui/core'\r\n\r\nimport List from '../list'\r\nimport AddItemPanel from '../add-item-panel'\r\n\r\nimport './layout.scss'\r\n\r\nexport default class Layout extends Component {\r\n    render() {\r\n        const { \r\n            todos, onAddItem, \r\n            onMarkAsDone, onDeleteItem, onEdit\r\n        } = this.props\r\n\r\n        const list = (\r\n            <List \r\n                todos={ todos }\r\n                onMarkAsDone={ onMarkAsDone }\r\n                onDeleteItem={ onDeleteItem }\r\n                onEdit={ onEdit }\r\n            />\r\n        )\r\n\r\n        const emptyBlock = <div className=\"empty-block\">Nothing here...</div>\r\n\r\n        const content = todos.length ? list : emptyBlock\r\n\r\n        return (\r\n            <Container maxWidth=\"lg\">\r\n                <Paper elevation={3} className=\"layout\">\r\n                    <AddItemPanel onAddItem={ onAddItem } />\r\n                    { content }\r\n                </Paper>\r\n            </Container>\r\n        )\r\n    }\r\n}","import App from './app'\r\n\r\nexport default App","import React, { Component } from 'react'\r\n\r\nimport Layout from '../layout/'\r\n\r\nimport './app.scss'\r\n\r\nexport default class App extends Component {\r\n    maxId = localStorage.getItem('maxId') || 0\r\n\r\n    state = {\r\n        todos: JSON.parse(localStorage.getItem('todos')) || []\r\n    }\r\n\r\n    onAddItem = text => {\r\n        this.setState(({ todos }) => {\r\n            return {\r\n                todos: [\r\n                    ...todos,\r\n                    { \r\n                        label: text, \r\n                        id: this.maxId++,\r\n                        done: false\r\n                    }\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    getIndex = id => {\r\n        return this.state.todos.findIndex(elem => elem.id === id)\r\n    }\r\n\r\n    stateProcessing = (id, prop, label) => {\r\n        const index = this.getIndex(id)\r\n        const oldItem = this.state.todos[index]\r\n        const newItem = { ...oldItem, [prop]: label ? label : !oldItem[prop] }\r\n\r\n        this.setState(({ todos }) => {\r\n            return {\r\n                todos: [\r\n                    ...todos.slice(0, index),\r\n                    newItem,\r\n                    ...todos.slice(index + 1)\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    onDeleteItem = id => {\r\n        this.setState(({ todos }) => {\r\n            const index = this.getIndex(id)\r\n\r\n            return {\r\n                todos: [\r\n                    ...todos.slice(0, index),\r\n                    ...todos.slice(index + 1)\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    onMarkAsDone = id => {\r\n        this.stateProcessing(id, 'done')\r\n    }\r\n\r\n    onEdit = (id, newLabel) => {\r\n        if (!newLabel) {\r\n            this.onDeleteItem(id)\r\n            return\r\n        } \r\n\r\n        this.stateProcessing(id, 'label', newLabel)\r\n    }\r\n\r\n    render() {\r\n        localStorage.setItem('todos', JSON.stringify(this.state.todos))\r\n        localStorage.setItem('maxId', this.maxId)\r\n\r\n        return (\r\n            <Layout \r\n                todos={ this.state.todos }\r\n                onAddItem={ this.onAddItem }\r\n                onMarkAsDone={ this.onMarkAsDone }\r\n                onDeleteItem={ this.onDeleteItem }\r\n                onEdit={ this.onEdit }\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/index'\n\nReactDOM.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}